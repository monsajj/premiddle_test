Зайцев Денис Андреевич
d.zaitsev@urancompany.com

1. Сессии, кеши, сложные формы
Написать простейшую форму отправки запроса (стандартная форма “свяжитесь с нами”) с защитой от повторной отправки на двойное нажатие. Также запретить отправку запроса чаще чем раз в 10 минут, а после успешной отправки выводить надпись “вы уже отправили запрос, повторный запросы можно отправить через ххх минут”. С помощью кеша защитить от отправки одного письма с разных ip (с разными ключами сессий).


2. Трай, кетч, простые классы
Напишите класс для работы с базой данных. Соединение устанавливать только при первом вызове DB::query(some sql), если на странице запроса нет - то и не соединять)
Если ошибка соединения mysqli_connect  - давать ошибку через исключение, чтобы можно было продолжить выполнение скрипта без данных из базы, но, например, отправить емейл. Или попробовать соединится с другой базой. Максимальное количество разных ошибок (неправильный хост, ошибка названия базы, невозможно выполнить запрос, ошибка запроса) проверить в тестах.


3. Трейты, интерфейсы, наследование классов
Напишите два класса для логина пользователя, при одном сделать стандартный логин по паре емейл/пароль, при втором - по паре мобильный и отправленная смс. Сделать возможность использовать разные “провайдеры” для смс сервисов.

4. Code review
<?php
/*
 * опишите что этот запрос делает, и можно ли его улучшить
 * заметьте - это Postgresql - предположительно не знакомая вам база данных и вам нужно почитать документацию прежде чем ответить
 */

$query = 'SELECT rev.id, COALESCE(SUM(CASE WHEN rait.mark=-1 THEN 1 END), 0) AS review_dislikes
		          FROM reviews AS rev
		          LEFT JOIN public.reviews_rating AS rait ON (rait.id_review=rev.id AND rait.status=0)
		          WHERE rev.id_item = 222 AND rev.status IN (0,1)
		          GROUP BY rev.id
		          ORDER BY rev.crtime DESC';
